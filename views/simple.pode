<html>
    <head>
        <title>Prod Web Checks</title>
        <meta http-equiv="refresh" content="30">
    </head>
    
    <body>
        <h1>EU1 Prod Web Tier - Health Checks - $((Get-Date).ToUniversalTime())</h1>

        <table id='myTable'>
            $(
       
                # Should pull in the hosts to be checked from the params - doesnt though because REASONS!
                If (!([string]::IsNullOrEmpty($data.hostsListdata)))
                {
                    $siteListdata = $data.hostsListdata
                }
                else # do this in case somehow an empty variable gets passed, what? it happens sometimes.
                {
                   $siteListdata = @("127.0.0.1", "127.0.0.1", "127.0.0.1", "127.0.0.1", "127.0.0.1", "127.0.0.1")
                }
                
                $columns = 4
                $rows = [System.Math]::Ceiling($siteListdata.Length / $columns)

                for ($row = 0; $row -lt $rows; $row++)
                {
                    "<tr>"

                    for ($col = 0; $col -lt $columns; $col++)
                    {
                        $hostName = $siteListdata[(4*$row)+$col]
                        if ([string]::IsNullOrWhiteSpace($hostName)) {
                            continue
                        }

                        $memory = ((Get-Counter -ComputerName $hostName '\Memory\Available MBytes').countersamples | Select-Object cookedvalue).cookedvalue
                        $cpu = [math]::round((((Get-Counter -ComputerName $hostName '\Processor(_Total)\% Processor Time').countersamples | Select-Object cookedvalue).cookedvalue))

                        $uri = "http://$($hostName)/hello.htm"
                        $time = try {
                            $result1 = Measure-Command { $request = Invoke-WebRequest -Uri $uri }
                            $result1.TotalMilliseconds
                        } 
                        catch {
                            #Called in the event there's a 404
                            $request = $_.Exception.Response
                            $time = -1
                        }

                        $statusCode = [int] $request.StatusCode
                        $statusDescription = $request.StatusDescription
                        $responseLength = "$($request.RawContentLength) bytes"
                        $timeTaken =  $time 

                        #Check Load Balancer 
                       # checkAzureLB -resourceGroup $data.LBrg -lbName $data.LBname -tenantID $data.tenantID -alertType $data.alertType -slackURI $data.slackURI -slackChan $data.slackChannel
                        
                        "<td style='border-width:1px;border-style:solid;padding:5px'>
                            <h2>$hostName</h2>
                            <ul>
                                <li>CPU Used: $cpu %</li>
                                <li>RAM Free: $memory MB </li>
                                    
                                <li>Web Checks: $uri </li>
                                <li>Status Code: $statusCode </li>
                                <li>Status Description: $statusDescription</li>
                                <li>Response Length: $responseLength</li>
                                <li>Time Taken: $timeTaken ms</li>
                            </ul>

                            $(if($statusCode -ne 200) {
                                "<b>THIS IS A TEST ERROR - No Status 200</b><br/>"

                                if ($data.alertType -eq "slack")
                                {
                                    slackMessage -message "No Status 200 for $hostName" -channel "$data.channel" -slackURI $data.slackURI
                                }
                                else
                                {
                                    mailUser -serverName $hostName -message "No Status 200 for $hostName" -smtpUser $data.smtpUser -smtpPassword $data.smtpPassword -smtpServer $data.smtpServer -smtpAlertTarget $data.smtpAlertTarget
                                }
                            }

                            if($TimeTaken -gt 80) {
                                "<b>THIS IS A TEST ERROR - Bad response time</b><br/>"

                                if ($data.alertType -eq "slack")
                                {
                                    slackmessage -message "Bad response time - $timeTaken ms for $hostName" -channel "$data.channel" -slackURI $data.slackURI
                                }
                                else
                                {
                                    mailuser -serverName $hostName -message "Bad response time - $timeTaken ms for $hostName" -smtpUser $data.smtpUser -smtpPassword $data.smtpPassword -smtpServer $data.smtpServer -smtpAlertTarget $data.smtpAlertTarget
                                }
                            }

                            if($memory -lt 2000) {
                                "<b>THIS IS A TEST ERROR - Low Free Memory</b><br/>"

                                if ($data.alertType -eq "slack")
                                {
                                    slackmessage -message "Low Free Memory - $memory MB  for $hostName" -channel "$data.channel" -slackURI $data.slackURI
                                }
                                else
                                {
                                    mailuser -serverName $hostName -message "Low Free Memory - $memory MB  for $hostName" -smtpUser $data.smtpUser -smtpPassword $data.smtpPassword -smtpServer $data.smtpServer -smtpAlertTarget $data.smtpAlertTarget
                                }
                            }

                            if($cpu -gt 40) {
                                "<b>THIS IS A TEST ERROR - High CPU usage</b><br/>"

                                    if ($data.alertType -eq "slack")
                                {
                                    slackmessage -message "High CPU usage - $cpu %  for $hostName" -channel "$data.channel" -slackURI $data.slackURI
                                }
                                else
                                {
                                    mailuser -serverName $hostName -message "High CPU usage - $cpu %  for $hostName" -smtpUser $data.smtpUser -smtpPassword $data.smtpPassword -smtpServer $data.smtpServer -smtpAlertTarget $data.smtpAlertTarget
                                }
                            })
                        </td>"
                    }

                    "</tr>"
                }
            )
        </table>
    </body>
</html>